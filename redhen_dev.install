<?php

/**
 * @file
 *
 */

module_load_include('inc', 'devel_generate');

/**
 * Implements hook_install().
 */
function redhen_dev_install() {
  include_once DRUPAL_ROOT . '/profiles/standard/standard.install';

  // Enable the admin theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'adminimal')
    ->execute();
  variable_set('admin_theme', 'adminimal');
  variable_set('theme_default', 'bartik');
  variable_set('node_admin_theme', '1');

  standard_install();

  variable_set('redhen_contact_connect_users', TRUE);

  redhen_dev_create_note_type_terms();

  drupal_flush_all_caches();

  redhen_dev_create_orgs();

  redhen_dev_create_contacts(array('staff', 'management', 'volunteer'));

  node_access_rebuild(TRUE);
}

/**
 * Helper to create contacts.
 */
function redhen_dev_create_contacts($bundles, $number = 100) {
  module_load_include('inc', 'addressfield', 'addressfield.devel_generate');
  for ($i = 0; $i < $number; $i++) {
    $bundle = $bundles[mt_rand(0, count($bundles) - 1)];
    if ($i == 0 || !($i % 3 == 0)) {
      $first_name = random_data_first_name();
      $contact_values = array(
        'type' => $bundle,
        'first_name' => $first_name,
        'middle_name' => $i % 2 ? '' : random_data_first_name(),
        'last_name' => random_data_last_name(),
        'author_uid' => 1,
      );
    }
    $contact = new RedhenContact($contact_values);
    $contact->setEmail(
      strtolower($first_name) . '@' . devel_generate_word(mt_rand(5, 20)) . '.com'
    );

    if ($instance = field_info_instance('redhen_contact', 'field_address', $bundle)) {
      $field = field_info_field('field_address');
      $contact->field_address[LANGUAGE_NONE][0] = _addressfield_devel_generate(NULL, $field, $instance, NULL);
    }

    $contact->save();

    if ($i >= 0 and $i < 10) {
      $note = new RedhenNote(array(
        'type' => 'redhen_note',
        'entity_type' => 'redhen_contact',
        'entity_id' => $contact->contact_id,
        'author_uid' => 1,
      ));
      $note->redhen_note_body[LANGUAGE_NONE][0]['value'] = devel_generate_word(mt_rand(5, 20));
      $note->redhen_note_type[LANGUAGE_NONE][0]['tid'] = rand(1, 2);
      $note->save();
    }

    $scores = redhen_dev_test_engagement_scores();
    $num_scores = mt_rand(0, 10);
    for ($s = 0; $s < $num_scores; $s++) {
      $engagement = redhen_engagement_create(
        array_rand($scores),
        $contact->contact_id,
        devel_generate_word(mt_rand(10, 30),
        NULL,
        NULL,
        1)
      );
      redhen_engagement_save($engagement);
    }
  }
}

/**
 * Helper to create orgs.
 */
function redhen_dev_create_orgs() {
  foreach (random_data_get_all_orgs() as $organization) {
    $bundle = $organization['type'];
    if ($bundle == 'foundation' || $bundle == 'shelter') {
      $org = new RedhenOrg(array(
        'type' => $bundle,
        'label' => $organization['name'],
      ));
      $org->save();
      $note = new RedhenNote(array(
        'type' => 'redhen_note',
        'entity_type' => 'redhen_org',
        'entity_id' => $org->org_id,
        'author_uid' => 1,
      ));
      $note->redhen_note_body[LANGUAGE_NONE][0]['value'] = devel_generate_word(mt_rand(5, 20));
      $note->redhen_note_type[LANGUAGE_NONE][0]['tid'] = rand(1, 3);
      $note->save();
    }
  }
}

/**
 * Create note type terms.
 */
function redhen_dev_create_note_type_terms() {
  $note_type_taxonomy = taxonomy_vocabulary_machine_name_load('note_type');

  $terms = array('Phone call', 'Email', 'Letter', 'Conversation');

  foreach ($terms as $termname) {
    $term = new stdClass();
    $term->name = $termname;
    $term->vid = $note_type_taxonomy->vid;
    taxonomy_term_save($term);
  }
}

/**
 * Return engagement scores used in this demo.
 */
function redhen_dev_test_engagement_scores() {
  return array(
    'event_registration' => 'Event registration',
    'comment' => 'Comment',
  );
}

/**
 * Helper function for pulling a random first name.
 */
function random_data_first_name() {

  $first_names = array(
    'Sean',
    'Lev',
    'Andrea',
    'Tauno',
    'Brandon',
    'John',
    'Jonathan',
    'Grant',
    'Lee',
    'Steve',
    'Stephen',
    'Chris',
    'Christian',
    'Jill',
    'Julie',
    'Jane',
    'Jack',
    'Jasmine',
    'Sally',
    'Kerry',
    'Susanne',
    'Susan',
    'Linda',
    'LouAnn',
    'Richard',
    'Eric',
    'Erik',
    'Edwin',
    'Edward',
    'Liz',
    'Elizabeth',
    'Anna',
    'Anne',
    'Alan',
    'Alexandra',
    'Alex',
    'Thomas',
    'Tony',
    'Paul',
    'Pauline',
    'Tim',
    'Timothy',
    'Zack',
    'Jed',
    'Kelly',
    'Kyle',
    'Pam',
    'Pat',
    'Patrick',
    'Patricia',
    'Robert',
    'Roberto',
    'Albert',
    'Alberto',
    'Lander',
    'Wolfe',
    'Skip',
    'Miles',
    'Johnny',
    'Stewart',
    'Katherine',
    'Catherine',
    'Annie',
    'Brian',
    'Hans',
    'Janet',
    'T.J.',
    'Kristin',
    'Margaux',
    'Erin',
    'Jeffery',
    'Alyssa',
    'Alisa',
    'Alexis',
    'Bill',
    'Jake',
    'Katie',
    'Jay',
    'Matt',
    'Matthew',
    'Will',
    'Bri',
    'Cindy',
    'Melissa',
    'Adam',
    'Tess',
    'Skip',
    'Sky',
    'Holly',
    'Kris',
    'Nicole',
    'Jason',
    'Dax',
    'Jordan',
    'Heather',
    'Laura',
    'Rob',
    'Drew',
    'Andrew',
    'Grant',
    'Nate',
    'Nathen',
    'Khari',
    'Rich',
    'Fletcher',
    'Mason',
    'Sheena',
    'Turin',
    'Sallie',
    'Elisa',
    'Dorinda',
    'Pace',
    'Sandra',
    'Maria',
    'Myra',
    'Krista',
    'David',
    'Greg',
    'Gregg',
    'Edric',
    'Lisa',
    'Mary Beth',
    'Michelle',
    'Flynn',
    'Heidi',
    'Lauren',
    'Cyrus',
    'Josie',
    'Jan',
    'Julia',
    'Nikki',
    'Cody',
    'Dana',
    'Earl',
    'Emily',
    'Sun',
    'Milo',
    'Blaise',
    'Erica',
    'Jewel',
    'Corey',
    'Walter',
    'Justin',
    'Randall',
    'Chandra',
    'Amanda',
    'Chad',
    'Wilson',
    'Luther',
    'Moira',
    'Damien',
    'Kelly',
    'Shannon',
    'Marlene',
    'Kevin',
    'Richard',
    'Art',
    'Amye',
    'Anthony',
    'Amy',
    'A.J.',
    'Fred',
    'Felipe',
    'Karen',
    'Carl',
    'Karl',
    'Sarah',
    'Sara',
    'Shawn',
    'Mary',
    'Mark',
    'Josh',
    'Peter',
    'Kristina',
    'Christine',
    'Jesse',
    'Becky',
    'Bob',
    'Peggy',
    'Silus',
    'River',
    'Mark',
    'Marcus',
    'Jim',
    'Terry',
    'Lupine',
    'Charles',
    'Betty',
    'Joe',
    'Stacy',
    'Stacey',
    'Stiv',
    'Jamie',
    'Lewis',
    'Carol',
    'Jeremy',
    'Scott',
    'Mike',
    'Phillips',
  );

  $name = array_rand($first_names, 1);
  return $first_names[$name];

}

/**
 * Helper function for pulling a random first name.
 */
function random_data_last_name() {

  $last_names = array(
    'French',
    'King',
    'Stockton',
    'Mitchell',
    'Oakland',
    'Jackson',
    'Toledo',
    'White',
    'Bane',
    'Zane',
    'Larkin',
    'Tsypin',
    'Burton',
    'Hogue',
    'Lee',
    'Parker',
    'Taylor',
    'Moore',
    'Stetson',
    'Peterbuilt',
    'Cruise',
    'Jonze',
    'Fey',
    'Patel',
    'Ryan',
    'Doe',
    'Lawson',
    'Dawson',
    'Grant',
    'Cooper',
    'Anderson',
    'Andersen',
    'Bishop',
    'Regan',
    'Hupp',
    'Stevens',
    'Stevenson',
    'Santana',
    'Santiago',
    'Barber',
    'Smith',
    'Davison',
    'O\'Reilly',
    'O\'Neil',
    'Givingsworth',
    'Peters',
    'Peterson',
    'Stratton',
    'Huckley',
    'Earhart',
    'Hudson',
    'Scott',
    'Lemon',
    'Michaels',
    'Angelo',
    'Frost',
    'Turner',
    'Maxwell',
    'Clinton',
    'Wonder',
    'Quinn',
    'Bridges',
    'Madison',
    'Jacob',
    'Simone',
    'Simon',
    'Eustis',
    'Simpson',
    'Eagle',
    'Hoffman',
    'Lichten',
    'Winston',
    'Bowers',
    'Cook',
    'Bethea',
    'Eckberg',
    'Arnold',
    'Bowron',
    'Born',
    'Ingle',
    'Backer',
    'Savage',
    'Robinson',
    'Merlin',
    'Spencer',
    'Byrne',
    'Cahill',
    'Ernst',
    'Hatfield',
    'Boil',
    'Kern',
    'Fish',
    'Lincoln',
    'Nash',
    'Duke',
    'Shipman',
    'Baird',
    'McNaughty',
    'Butcher',
    'Meyers',
    'Heckman',
    'Cort',
    'Woods',
    'Son',
    'Hammer',
    'Goodman',
    'Loveless',
    'Sharp',
    'Tompkins',
    'Lewis',
    'Wild',
    'Griffin',
    'Griggs',
    'Rogers',
    'Roberts',
    'Irvington',
    'Odefey',
    'Michels',
    'Kroman',
    'Evans',
    'Yaggi',
    'Sanderson',
    'Jobs',
    'McQueen',
    'Sanders',
    'Rodrigo',
    'Rodgers',
    'Robertson',
    'Tyler',
  );

  $name = array_rand($last_names, 1);
  return $last_names[$name];
}

/**
 * Helper function for pulling random organizations.
 */
function random_data_organization() {
  $organizations = random_data_get_all_orgs();
  $org = array_rand($organizations, 1);
  return $organizations[$org];
}

/**
 * Helper function for getting an array of organizations.
 */
function random_data_get_all_orgs() {

  $organizations = array(
    array('type' => 'shelter', 'domain' => 'org', 'name' => 'Lucky Critters Shelter'),
    array('type' => 'shelter', 'domain' => 'org', 'name' => 'Rose City Squirrel Shelter'),
    array('type' => 'shelter', 'domain' => 'org', 'name' => 'A Horse is a Horse Of Course Adoptions'),
    array('type' => 'foundation', 'domain' => 'org', 'name' => 'Oregon Foundation for Animal Shelters'),
    array('type' => 'foundation', 'domain' => 'org', 'name' => 'NYC Cares About Pets'),
    array('type' => 'shelter', 'domain' => 'org', 'name' => 'Fish Have Feelings Too'),
    array('type' => 'foundation', 'domain' => 'org', 'name' => 'Society for the Ethical Treatment of Clams'),
    array('type' => 'shelter', 'domain' => 'org', 'name' => 'Crouching Tigers Need a Home'),
    array('type' => 'foundation', 'domain' => 'org', 'name' => 'Cat People Care'),
    array('type' => 'shelter', 'domain' => 'org', 'name' => 'Bark If You Love Cats'),
    array('type' => 'business', 'domain' => 'com', 'name' => 'Beautiful Pets'),
    array('type' => 'business', 'domain' => 'com', 'name' => 'One Fish Two Fish'),
    array('type' => 'business', 'domain' => 'com', 'name' => 'Pet Supplies Are Us'),
  );

  return $organizations;
}
